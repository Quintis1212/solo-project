{"version":3,"sources":["reducer/reducer.js","Async/GetData.js","Auxiliar/themeFunction.js","components/ControlBar.js","components/TextItem.js","App.js","serviceWorker.js","index.js"],"names":["store","createStore","state","action","type","data","staticData","fontSize","backgroundColor","listDisplayBlock","text","textVal","fontSizeNew","parseInt","font","fontFamily","trim","regexp","RegExp","filteredData","filter","el","family","match","console","log","a","fetch","response","json","myJson","dataArr","JSON","parse","stringify","items","dispatch","forEach","link","document","createElement","setAttribute","head","appendChild","styleThemeFunction","currentTheme","color","borderColor","ControlBar","fontVal","textHandler","e","val","target","value","key","id","setState","props","setText","setFontFamily","fontHandler","setFontSize","pageBackgroundHandler","setBackground","displayListHandler","setListDisplay","clearTextField","getData","body","style","background","this","className","placeholder","onChange","defaultValue","event","name","onClick","Component","connect","TextItem","itemsOnPage","linkToTop","linkToTopHandler","handleScroll","component","window","addEventListener","innerHeight","scrollY","offsetHeight","scrollFunc","display","map","i","href","App","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1e150f4e.chunk.js","sourcesContent":["import {createStore} from 'redux';\r\n\r\n\r\n\r\n\r\nfunction reducer(state=0, action) {\r\n    switch (action.type) {\r\n    case 'SET-DATA':\r\n        state = action.data\r\n        return {data:state,staticData:state,fontSize:24,backgroundColor:\"white\",listDisplayBlock:true};\r\n\r\n    case 'SET-TEXT':\r\n        let text = action.textVal\r\n        return {...state,textVal:text};\r\n\r\n    case 'SET-BACKGROUND':\r\n      let backgroundColor = action.backgroundColor\r\n      return {...state,backgroundColor:backgroundColor};\r\n\r\n    case 'SET-LIST-DISPLAY':\r\n      return {...state,listDisplayBlock:action.listDisplayBlock};\r\n\r\n    case 'SET-FONT-SIZE':\r\n        let fontSizeNew = parseInt(action.fontSize);\r\n        return {...state,fontSize:fontSizeNew};\r\n\r\n    case 'SET-FONT-FAMILY':\r\n        let font = action.fontFamily.trim()\r\n        if (font === \"\") {\r\n          return {...state,data: state.staticData};\r\n        }\r\n        var regexp = new RegExp((font),\"i\") \r\n        let filteredData = state.staticData.filter(el=>{\r\n        return  el.family.match(regexp)\r\n        })\r\n        console.log(regexp)\r\n        return {...state,data:filteredData,fontFamily:font};\r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n \r\n\r\n  const store = createStore(reducer); \r\n  \r\n\r\n \r\n  export default store","import store from '../reducer/reducer';\r\n\r\n\r\n\r\nexport default async function getData() {\r\n    const response = await fetch('https://www.googleapis.com/webfonts/v1/webfonts?key=AIzaSyBHugCJVSIcLu-Pc2EYMQ78Tuky2mCWWng')\r\n    const myJson = await response.json();\r\n    const dataArr = JSON.parse(JSON.stringify(myJson.items))\r\n    store.dispatch({type:'SET-DATA',data :dataArr })\r\n    dataArr.forEach(el=>{\r\n      let link = document.createElement('link');\r\n      link.setAttribute('rel', 'stylesheet');\r\n      link.setAttribute('type', 'text/css');\r\n      link.setAttribute('href', `https://fonts.googleapis.com/css?family=${el.family}&display=swap` );\r\n      document.head.appendChild(link);\r\n      })\r\n  }\r\n\r\n","\r\n\r\n\r\n\r\n//let currentTheme = this.state.data.backgroundColor\r\n\r\nconst styleThemeFunction = (currentTheme) => {\r\n\r\n    const styleArr= [ \r\n        {\r\n            color: \"black\",\r\n            borderColor:\"black\",\r\n            backgroundColor:\"white\",\r\n\r\n        },\r\n    \r\n        {\r\n            color: \"white\",\r\n            borderColor:\" white\",\r\n            backgroundColor:\"black\"\r\n        }\r\n    ]\r\n\r\n    let currentCSSTheme= styleArr.filter(el=>{\r\n        return el.color !== currentTheme\r\n    })\r\n\r\n    return currentCSSTheme;\r\n\r\n}\r\n\r\nexport default styleThemeFunction;\r\n\r\n","import React, { Component } from 'react'\r\nimport getData from '../Async/GetData'\r\nimport { connect } from 'react-redux';\r\nimport styleThemeFunction from '../Auxiliar/themeFunction'\r\n\r\n\r\n class ControlBar extends Component {\r\n    state ={\r\n        textVal:'',\r\n        fontVal:'',\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        return props\r\n    }\r\n\r\n    componentDidMount(){\r\n        getData()\r\n    }\r\n\r\n    textHandler=(e)=>{\r\n        let val = e.target.value\r\n        let key = e.target.id\r\n\r\n        this.setState({\r\n            [key]:val\r\n        })\r\n        return key === \"textVal\"?  this.props.setText(val) : this.props.setFontFamily(val)\r\n    }\r\n\r\n    fontHandler=(val)=>{\r\n        this.props.setFontSize(val)\r\n    }\r\n\r\n    pageBackgroundHandler=(e)=>{\r\n         this.props.setBackground(e.target.value)\r\n    }\r\n\r\n    displayListHandler=()=>{\r\n        this.props.setListDisplay(!this.state.data.listDisplayBlock)\r\n    }\r\n\r\n    clearTextField= ()=>{\r\n        this.props.setText(\"\") \r\n        this.props.setFontFamily(\"\")\r\n        this.setState({\r\n            textVal:'',\r\n            fontVal:'',\r\n        })\r\n    }\r\n    render() {\r\n\r\n        document.body.style.background =this.state.data.backgroundColor\r\n\r\n        return (\r\n            <header >\r\n                <nav>\r\n                <div className=\"navigation\">\r\n                <h2 className=\"logo\">Google</h2>\r\n                <span className=\"nav-links\">\r\n                    <h4>Catalog</h4>\r\n                    <h4>Featured</h4>\r\n                    <h4>Articles</h4>\r\n                    <h4>About</h4>\r\n                </span>\r\n                </div>\r\n                <div className=\"control-bar\" style={styleThemeFunction(this.state.data.backgroundColor)[0]}>\r\n                <input style={styleThemeFunction(this.state.data.backgroundColor)[0]} id=\"fontVal\" value={this.state.fontVal} placeholder=\"Type font-family\" onChange={this.textHandler} ></input>\r\n                <input style={styleThemeFunction(this.state.data.backgroundColor)[0]} id=\"textVal\" value={this.state.textVal} placeholder=\"Type some text here\" onChange={this.textHandler}></input>\r\n                <select style={styleThemeFunction(this.state.data.backgroundColor)[0]} defaultValue=\"24\" onChange={(event) => this.fontHandler(event.target.value)}>\r\n                    <option  value=\"20\">20</option>\r\n                    <option  value=\"24\">24</option>\r\n                    <option value=\"32\">32</option>\r\n                    <option value=\"40\">40</option>\r\n                </select>\r\n                <span >\r\n                <input className=\"black-theme-button\" type=\"radio\"   name=\"page-background\"  value=\"black\" onClick={this.pageBackgroundHandler}></input>\r\n               <input className=\"white-theme-button\" type=\"radio\"  name=\"page-background\" value=\"white\"  onClick={this.pageBackgroundHandler}></input>\r\n                </span>\r\n                {this.state.data.listDisplayBlock !== false?<i style={styleThemeFunction(this.state.data.backgroundColor)[0]} onClick={this.displayListHandler}  className=\"fas fa-th-large\"></i> : <i style={styleThemeFunction(this.state.data.backgroundColor)[0]} onClick={this.displayListHandler} className=\"fas fa-list\"></i>  }\r\n                {this.state.data.listDisplayBlock !== false?<i style={styleThemeFunction(this.state.data.backgroundColor)[0]} onClick={this.clearTextField}  className=\"fas fa-undo-alt\"></i> : <i style={styleThemeFunction(this.state.data.backgroundColor)[0]} onClick={this.clearTextField} className=\"fas fa-undo-alt\"></i>  }\r\n                </div>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(state=>({\r\n    data:state\r\n}), \r\n dispatch=>({\r\n        setText:(val)=>{\r\n        dispatch({type:'SET-TEXT',textVal:val})\r\n        },\r\n        setFontFamily:(val)=>{\r\n        dispatch({type:'SET-FONT-FAMILY',fontFamily:val})\r\n        },\r\n        setFontSize:(val)=>{\r\n        dispatch({type:'SET-FONT-SIZE',fontSize:val})\r\n        },\r\n        setBackground:(val)=>{\r\n        dispatch({type:'SET-BACKGROUND',backgroundColor:val})\r\n        },\r\n        setListDisplay:(val)=>{\r\n        dispatch({type:'SET-LIST-DISPLAY',listDisplayBlock:val})\r\n        }\r\n\r\n\r\n })\r\n\r\n)(ControlBar)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport styleThemeFunction from '../Auxiliar/themeFunction'\r\n\r\n class TextItem extends Component {\r\n    state = {\r\n        itemsOnPage:16,\r\n        linkToTop: false\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        return props\r\n    }\r\n\r\n    componentDidMount(){\r\n        let component  = this                                                      \r\n       const scrollFunc=(component)=>{ \r\n        window.addEventListener('scroll', function(e) {\r\n           if ((window.innerHeight + window.scrollY) > (document.body.offsetHeight-10) ){\r\n                  component.handleScroll()\r\n            }\r\n\r\n            if (window.scrollY > 150) {\r\n                component.linkToTopHandler(true)\r\n            } else if (window.scrollY < 150) {\r\n                component.linkToTopHandler(false)\r\n            }\r\n\r\n          });\r\n       }\r\n       scrollFunc(component)\r\n    }\r\n\r\n    linkToTopHandler=(val)=>{\r\n        this.setState({\r\n            linkToTop: val\r\n        })\r\n    }\r\n\r\n\r\n    handleScroll=()=>{\r\n        this.setState({\r\n            itemsOnPage:this.state.itemsOnPage+4\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const listStyle= {\r\n                display: \"grid\",\r\n                \"gridTemplateColumns\": \"repeat(auto-fill, 300px)\",\r\n                \"columnGap\": \"20px\",\r\n                \"justifyContent\": \"center\",\r\n                \"textAlign\": \"left\"\r\n            \r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <main   className=\"main-content\" style={this.state.data.listDisplayBlock !== false? listStyle : null}>\r\n                {this.state.data ? this.state.data.data.map((el,i)=>{\r\n        \r\n                return i < this.state.itemsOnPage?  (\r\n                        <div  className=\"main-content-item\" key={el.family} style={styleThemeFunction(this.state.data.backgroundColor)[0]}>\r\n                        <p>{el.family}</p>\r\n                        <p  style={{fontFamily: el.family,fontSize:this.state.data.fontSize+\"px\"}}>{this.state.data.textVal|| \"Text example\"}</p>\r\n                        <i className=\"fas fa-plus\"></i>\r\n                       </div>\r\n                    ) : null\r\n                }): null}\r\n                \r\n               {this.state.linkToTop? <a className=\"link-to-top\" href=\"#root\"><i className=\"fas fa-arrow-circle-up\"></i></a> :null } \r\n            </main>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(state=>({\r\n    data:state\r\n}), \r\n dispatch=>({\r\n    \r\n })\r\n\r\n)(TextItem)","import React from 'react';\nimport './App.css';\nimport ControlBar from './components/ControlBar'\nimport { Provider } from 'react-redux';\nimport store from './reducer/reducer'\nimport TextItem from './components/TextItem';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <ControlBar/>\n      <TextItem/>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}